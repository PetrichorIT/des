PreparedUnit {
<< includes >>
- Include { D2_NetInNet.ndl }
<< modules >>
module M<module@D2_NetInNet.ndl> {
	gates: 
		one_in[1] @input
		one_out[1] @output
		cluster[5] 
}
module SomeP<module@D2_NetInNet.ndl> like P {
	gates: 
		in[1] @input
		out[1] @output
}
module OtherP<module@D2_NetInNet.ndl> like P {
	gates: 
		in[1] @input
		out[1] @output
}
prototype P<prototype@D2_NetInNet.ndl> {
	gates: 
		in[1] @input
		out[1] @output
}
<< networks >>
network Sub<subsystem@D2_NetInNet.ndl> {
	nodes: 
		a: M<module@D2_NetInNet.ndl> 
		b: M<module@D2_NetInNet.ndl> 
		c: M<module@D2_NetInNet.ndl> 
	exports: 
		a/one_in[0] 
		b/one_out[0] 
		c/cluster[0] 
}
network Main<subsystem@D2_NetInNet.ndl> {
	nodes: 
		sub: Sub<subsystem@D2_NetInNet.ndl> 
		m: M<module@D2_NetInNet.ndl> 
}
<< errors >>
-> 0 errors
}